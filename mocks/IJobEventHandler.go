// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	jobmgr "github.com/fyerfyer/fyer-scheduler/pkg/worker/jobmgr"
	mock "github.com/stretchr/testify/mock"
)

// IJobEventHandler is an autogenerated mock type for the IJobEventHandler type
type IJobEventHandler struct {
	mock.Mock
}

type IJobEventHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *IJobEventHandler) EXPECT() *IJobEventHandler_Expecter {
	return &IJobEventHandler_Expecter{mock: &_m.Mock}
}

// HandleJobEvent provides a mock function with given fields: event
func (_m *IJobEventHandler) HandleJobEvent(event *jobmgr.JobEvent) {
	_m.Called(event)
}

// IJobEventHandler_HandleJobEvent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HandleJobEvent'
type IJobEventHandler_HandleJobEvent_Call struct {
	*mock.Call
}

// HandleJobEvent is a helper method to define mock.On call
//   - event *jobmgr.JobEvent
func (_e *IJobEventHandler_Expecter) HandleJobEvent(event interface{}) *IJobEventHandler_HandleJobEvent_Call {
	return &IJobEventHandler_HandleJobEvent_Call{Call: _e.mock.On("HandleJobEvent", event)}
}

func (_c *IJobEventHandler_HandleJobEvent_Call) Run(run func(event *jobmgr.JobEvent)) *IJobEventHandler_HandleJobEvent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*jobmgr.JobEvent))
	})
	return _c
}

func (_c *IJobEventHandler_HandleJobEvent_Call) Return() *IJobEventHandler_HandleJobEvent_Call {
	_c.Call.Return()
	return _c
}

func (_c *IJobEventHandler_HandleJobEvent_Call) RunAndReturn(run func(*jobmgr.JobEvent)) *IJobEventHandler_HandleJobEvent_Call {
	_c.Run(run)
	return _c
}

// NewIJobEventHandler creates a new instance of IJobEventHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIJobEventHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *IJobEventHandler {
	mock := &IJobEventHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
